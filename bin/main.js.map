{"version":3,"file":"main.js","sources":["../src/blueprints/blueprint.ts","../src/prototypes/StructureSpawn.ts","../src/prototypes/Creep.ts","../src/main.ts"],"sourcesContent":["export const BlueprintEnum = {\n    HARVESTER: 'harvester',\n    WORKER: 'worker',\n};\n\nexport const blueprintSpecs: BlueprintSpecs = {\n    harvester: {\n        name: 'harvester',\n        parts: [WORK, WORK, MOVE, MOVE],\n    },\n\n    worker: {\n        name: 'worker',\n        parts: [CARRY, CARRY, MOVE, MOVE],\n    },\n};\n","if (!StructureSpawn.prototype._assembleBlueprint) {\n    StructureSpawn.prototype._assembleBlueprint =\n        StructureSpawn.prototype.assembleBlueprint;\n\n    StructureSpawn.prototype.assembleBlueprint = function(blueprint: Blueprint) {\n        let creepID = 0;\n        let creepName = blueprint.name + '_' + creepID;\n\n        while (Game.creeps[creepName]) {\n            creepName = blueprint.name + '_' + creepID++;\n        }\n\n        return this.spawnCreep(blueprint.parts, creepName, {\n            memory: {blueprint: blueprint.name}\n        })\n    }\n}\n","Object.defineProperty(Creep.prototype, 'blueprint', {\n    set: function(blueprint) {\n        this.memory.blueprint = blueprint;\n        this._blueprint = blueprint;\n    },\n\n    get: function() {\n        if (!this._blueprint) {\n            this._blueprint = this.memory.blueprint;\n        }\n\n        return this._blueprint;\n    }\n})\n","import { blueprintSpecs } from \"./blueprints/blueprint\";\nimport './prototypes/StructureSpawn';\nimport './prototypes/Creep';\n\nexport function loop(): void {\n    let spawn: StructureSpawn = Game.spawns['Capital'];\n\n    if(countHarvesters() < 1) {\n        spawn.assembleBlueprint(blueprintSpecs.harvester)\n    }\n}\n\nfunction countHarvesters(): number {\n    let counter = 0;\n\n    for (let creep in Game.creeps) {\n        if (Game.creeps[creep].memory.blueprint == 'harvester') counter++\n    }\n\n    return counter\n}\n"],"names":[],"mappings":";;AAKO,MAAM,cAAc,GAAmB;AAC1C,IAAA,SAAS,EAAE;AACP,QAAA,IAAI,EAAE,WAAW;QACjB,KAAK,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;AAClC,KAAA;AAED,IAAA,MAAM,EAAE;AACJ,QAAA,IAAI,EAAE,QAAQ;QACd,KAAK,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC;AACpC,KAAA;CACJ;;ACfD,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,kBAAkB,EAAE;IAC9C,cAAc,CAAC,SAAS,CAAC,kBAAkB;AACvC,QAAA,cAAc,CAAC,SAAS,CAAC,iBAAiB,CAAC;AAE/C,IAAA,cAAc,CAAC,SAAS,CAAC,iBAAiB,GAAG,UAAS,SAAoB,EAAA;QACtE,IAAI,OAAO,GAAG,CAAC,CAAC;QAChB,IAAI,SAAS,GAAG,SAAS,CAAC,IAAI,GAAG,GAAG,GAAG,OAAO,CAAC;AAE/C,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE;YAC3B,SAAS,GAAG,SAAS,CAAC,IAAI,GAAG,GAAG,GAAG,OAAO,EAAE,CAAC;AAChD,SAAA;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,EAAE,SAAS,EAAE;AAC/C,YAAA,MAAM,EAAE,EAAC,SAAS,EAAE,SAAS,CAAC,IAAI,EAAC;AACtC,SAAA,CAAC,CAAA;AACN,KAAC,CAAA;AACJ;;AChBD,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,SAAS,EAAE,WAAW,EAAE;IAChD,GAAG,EAAE,UAAS,SAAS,EAAA;AACnB,QAAA,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC;AAClC,QAAA,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;KAC/B;AAED,IAAA,GAAG,EAAE,YAAA;AACD,QAAA,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YAClB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;AAC3C,SAAA;QAED,OAAO,IAAI,CAAC,UAAU,CAAC;KAC1B;AACJ,CAAA,CAAC;;SCTc,IAAI,GAAA;IAChB,IAAI,KAAK,GAAmB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AAEnD,IAAA,IAAG,eAAe,EAAE,GAAG,CAAC,EAAE;AACtB,QAAA,KAAK,CAAC,iBAAiB,CAAC,cAAc,CAAC,SAAS,CAAC,CAAA;AACpD,KAAA;AACL,CAAC;AAED,SAAS,eAAe,GAAA;IACpB,IAAI,OAAO,GAAG,CAAC,CAAC;AAEhB,IAAA,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,MAAM,EAAE;QAC3B,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,SAAS,IAAI,WAAW;AAAE,YAAA,OAAO,EAAE,CAAA;AACpE,KAAA;AAED,IAAA,OAAO,OAAO,CAAA;AAClB;;;;"}